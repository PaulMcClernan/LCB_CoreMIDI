library community.coremidi.paulmcclernan

use com.livecode.engine
use com.livecode.foreign
use com.livecode.objc
use com.livecode.array
use com.livecode.list
use com.livecode.byte
use com.livecode.binary

metadata version is "0.2.4"
metadata author is "Paul McClernan"
metadata title is "CoreMIDI library"
metadata svgicon is "M66.43,52.07c-0.71,0.32-1.48,0.56-2.31,0.78c-2.35,0.65-5.44,0.04-5.44,0.04l-8.52,9.56c0,0,11.03,11.58,13.36,13.92 s4.02,6.19,4.02,6.19l8.77-19.76C76.31,62.8,67.18,58.92,66.43,52.07z M56.35,86.86c-2.83-2.4-16.4-15.09-16.4-15.09L21.22,90.12c0,0,3.25,1.93,5.41,1.86c5.6-0.17,10.48-3.77,15.46-3.77 c4.58,0,8.99,3.52,15.56,3.77c1.55,0.06,2.88-0.35,4.41-1.24c0.7-0.41,2.02-1.54,2.02-1.54S59.18,89.26,56.35,86.86z M52.45,18.42c5.85-5.85,5.42-15.63,5.42-15.63s-8.65,0.97-13.34,6.82c-5.22,6.51-5.07,13.39-4.94,14.51 C44.49,24.13,48.71,22.16,52.45,18.42z M18.38,48.03c-3.59,0.27-3.23,4.28-3.21,4.45l0.03,0.32l-0.23,0.23l-5.54,5.89l-5.85-5.95l8.91,24.95l18.58-18.16l-8.8-9.83 C22.28,49.93,19.79,47.92,18.38,48.03z M9.98,39.65c0,0,1.4-2.6,5.19-5.27c2.15-1.51,4.69-2.88,7.45-3.52c1.75-0.41,3.72-0.62,5.86-0.62 c3.63,0,9.12,1.35,9.12,1.35l-10.85,4.24c-1.77,0.8-2.58,2.62-2.85,3.38l14.4,13.75c3.71-3.62,6.78-6.15,9.99-9.57 c-0.51-4.23,0.89-8.11,3.22-10.81c4.73-5.48,13.47-2.78,13.47-2.78l-3.55,3.05c0,0-4.13,3.16-3.01,6.79 c0.27,0.87,0.84,2.34,2.44,3.17c0.93,0.48,4.09,0.37,5.6-0.95C68.48,40.1,70.45,38,70.45,38s0.88-1.54,1.8-2.43 c1.11-1.08,3.56-2.91,3.56-2.91s-4.82-5.38-8.14-6.83c-2.91-1.27-6.15-1.89-9.71-1.91c-7.4-0.03-12.83,4.65-16.7,4.35 c-3.19-0.25-9.47-4.38-14.6-4.35c-7.22,0.05-13.04,2.44-17.47,7.33C5.44,35.37,4,45.11,4,45.11l1.89-1.93c0,0,2.98-0.11,3.34-0.41 c1.48-1.24,1.31-2.33,1.31-2.33L9.98,39.65z M18.15,46.11c1.68-0.19,4.88,2.09,4.88,2.09l9.22,10.03l4.11-3.86L21.75,39.42l0.13-0.52c0.03-0.14,0.88-3.49,3.9-4.84 l5.18-2.02c-1.95-0.07-5.6-0.11-7.97,0.42c-3.26,0.74-8.73,4.32-10.78,7.04c0.06,0.17,0.09,0.34,0.1,0.53 c0.08,1.49-1.41,3.45-2.02,3.98c-0.73,0.63-2.55,1.03-3.63,1.21l-3.94,3.94l6.59,6.6l3.85-3.86c-0.04-1.6,0.45-3.4,1.78-4.57 C15.67,46.71,16.48,46.3,18.15,46.11z M70.95,39.93c-0.62,0.44-4.18,6.07-9.58,4.98c-2.9-0.58-4.65-3.5-4.92-5.3c-0.6-4.07,1.8-6.16,3.56-7.69 c0.59-0.52,1.6-1.31,1.6-1.31s-6.16-0.73-9.16,3.5c-3.98,5.61-1.98,9.83-1.98,9.83S13.22,80.66,12.03,81.82 c-0.09,0.56-0.5,3.71,0.93,5.31c1.56,1.74,3.06,2.79,5.34,2.24c1.3-0.32,39.44-38.44,39.44-38.44s3.65,0.56,5.67,0.07 C68.3,49.8,70.71,46.32,70.95,39.93z M65.52,84.81c-0.14,0.85-0.52,1.48-1.2,1.99c-0.5,0.41-1.12,0.62-1.88,0.62c-2.8,0-6.23-3.51-6.24-3.52L41.82,70.25 l6.44-6.55c0,0,13.44,13.7,14.11,14.36C63.03,78.73,65.79,83.22,65.52,84.81z"
public foreign type MIDIPacket binds to "MCAggregateTypeInfo:kihhh" --kihhhhhhhh... k=UInt64  i=UInt16 h=3 x UInt8 -- MIDIPacket (timeStamp: MIDITimeStamp, length: UInt16, data: Data: ARRAY OF Bytes(256) x UInt8 )  -- UInt64,UInt16,Data(256))
public foreign type MIDIMsg binds to "MCAggregateTypeInfo:hhh" -- h=3 x UInt8
public foreign type MIDIPacketList binds to "MCAggregateTypeInfo:jr" -- Declaration (numPackets: UInt32, *packet(MIDIPacket)) -- j = UInt32
public foreign type TimeBaseInfo binds to "MCAggregateTypeInfo:jj"
public type MIDITimeStamp is UInt64

private foreign handler c_MIDIClientCreate(in pClientNameCFStrngRef as ObjcId, in pMIDINotifyProc as optional any, in pNotifyRefConst as optional any, \
                                              out rMIDIClientRef as ObjcId) returns CInt binds to "c:CoreMIDI.framework>MIDIClientCreate"
private foreign handler c_MIDIClientDispose(in pMIDIClientRef as ObjcId) returns CInt binds to "c:CoreMIDI.framework>MIDIClientDispose"

private foreign handler c_MIDIInputPortCreate(in pMIDIClientRef as ObjcId, in pInputPortNameCFStrngRef as ObjCId, out rMIDIInputPortRef as ObjcId) returns CInt binds to "c:CoreMIDI.framework>MIDIInputPortCreate"
private foreign handler c_MIDIOutputPortCreate(in pMIDIClientRef as ObjcId, in pOutPortNameCFStrngRef as ObjCId, out rMIDIOutPortRef as ObjcId) returns CInt binds to "c:CoreMIDI.framework>MIDIOutputPortCreate"
private foreign handler c_MIDIPortDispose( in pMIDIPortRef as ObjCId) returns CInt binds to "c:CoreMIDI.framework>MIDIPortDispose"

private foreign handler c_MIDIPortConnectSource( in pMIDIPortRef as ObjCId,in pMIDIEndpointRef as ObjCId, in pRefCon as optional any) returns CInt binds to "c:CoreMIDI.framework>MIDIPortConnectSource"
private foreign handler c_MIDIPortDisonnectSource( in pMIDIPortRef as ObjCId,in pMIDIEndpointRef as ObjCId) returns CInt binds to "c:CoreMIDI.framework>MIDIPortDisonnectSource"
private foreign handler c_MIDISourceCreate(in pMIDIClientRef as ObjcId, in pSourceNameStrRef as ObjCId, out rMIDISourceEndPointRef as ObjcId) returns CInt binds to "c:CoreMIDI.framework>MIDISourceCreate"
private foreign handler c_MIDIGetNumberOfSources() returns CInt binds to "c:CoreMIDI.framework>MIDIGetNumberOfSources"
private foreign handler c_MIDIGetSource( in pSourceIndexNum as Number) returns optional ObjCId binds to "c:CoreMIDI.framework>MIDIEGetSource" -- Returns a reference to a source, or NULL if an error occurred.

private foreign handler c_MIDIReceived(in pMIDIEndpointRef as ObjCId, in pMIDIPacketListPtr as Pointer) returns CInt binds to "c:CoreMIDI.framework>MIDIReceived" -- OSStatus MIDIReceived(MIDIEndpointRef src, const MIDIPacketList *pktlist);ai -- Use for SENDING Notes To Virstual Source (not MIDISend)
private foreign handler c_MIDISend(in pMIDIPortRef as ObjcId, in pMIDIEndpointRef as ObjCId, in pMIDIPacketList as Pointer) returns CInt binds to "c:CoreMIDI.framework>MIDISend"
private foreign handler c_MIDIPacketListInit(in pMIDIPacketListByteBuffer as Pointer) returns Pointer binds to "c:CoreMIDI.framework>MIDIPacketListInit"
private foreign handler c_MIDIPacketNext(in pMIDIPacketListByteBuffer as Pointer) returns Pointer binds to "c:CoreMIDI.framework>MIDIPacketNext"
private foreign handler c_MIDIPacketListAdd(in pMIDIPacketListByteBuffer as Pointer, in pPacketsCnt as UInt32, in pMIDIPacket as Pointer, in pMIDITimeStamp as UInt64, pPcktByteCnt as UInt16, in pPacket as Pointer) returns Pointer binds to "c:CoreMIDI.framework>MIDIPacketListAdd"

private foreign handler c_MIDIRestart() returns CInt binds to  "c:CoreMIDI.framework>MIDIRestart" -- OSStatus MIDIRestart(void); This is useful for forcing CoreMIDI to ask its drivers to rescan for hardware.
private foreign handler c_MIDIFlushOutput(in MIDIEndpointRef as optional ObjcId) returns CInt binds to  "c:CoreMIDI.framework>MIDIFlushOutput" -- OSStatus MIDIFlushOutput(MIDIEndpointRef dest); -- Parameters dest, All pending events scheduled to be sent to this destination are unscheduled. If NULL, the operation applies to all destinations.

-- MIDIObjectGetProperties -- Gets all of an object's properties.

private foreign handler objC_NSMutableDataWithLength(in pDataLength as ObjcId) returns ObjcId binds to "objc:NSMutableData.+dataWithLength:" -- Creates and returns an mutable data object containing a given number of zeroed bytes. Toll free bridges to CFMutableDataRef for Foundation C APIs
private foreign handler objC_NSMutableDataWithCapacity(in pDataLength as ObjcId) returns ObjcId binds to "objc:NSMutableData.+dataWithCapacity:"
private foreign handler objC_NSMutableDataBytesPtr(in pMutableDataRef as ObjcId) returns Pointer binds to "objc:NSMutableData.mutableBytes"
private foreign handler objC_NSMutableDataSetData(in pMutableDataRef as ObjcId, in pNSDataToSet as ObjcId) returns nothing binds to "objc:NSMutableData.-setData:"
private foreign handler objC_NSDataBytesPtr(inout pMutableDataRef as ObjcId) returns Pointer binds to "objc:NSData.bytes"

-- https://developer.apple.com/documentation/kernel/1462446-mach_absolute_time?language=objc
-- private foreign handler c_mach_absolute_time() returns MIDITimeStamp binds to "c:Kernel.framework>mach_absolute_time"
private foreign handler c_mach_absolute_time() returns UInt64 binds to "c:mach_absolute_time"
private foreign handler c_mach_timebase_info(inout pTimeBaseInfo as TimeBaseInfo) returns nothing binds to "c:mach_timebase_info"

private variable sMIDIClientRef as ObjcId
private variable sMIDIOutPortRef as ObjcId
private variable sMIDIInputPortRef as ObjcId
private variable sMIDIDestEndpointRef as ObjcId
private variable sMIDISourceEndpointRef as ObjcId
private variable sMIDIPacketPtr as Pointer
private variable sMIDIPacketListPtr as Pointer
-- private variable sMIDITimeStamp as optional MIDITimeStamp
private variable sMIDIPacketByteBufferNSMutableDataRef as ObjcId -- tCFMutableDataRef
private variable sMIDIPacketByteBufferPtr as Pointer

public handler CoreMIDIInit()
end handler

public handler CoreMIDISendMIDIbytes(in pTimeOffsetMillisecs as optional Number, in pMIDIMsgData as Data) returns nothing
   variable tOSStatus as optional CInt
   variable tAbsoluteTime as UInt64
   variable tTBnumerator as UInt32
   variable tTBdenominator as UInt32
   variable tTimeStamp as MIDITimeStamp
   variable tTimeBaseInfoRef as ObjCId
   variable tTimeBaseInfoPtr as Pointer
   variable tTimebaseInfo as TimeBaseInfo
   variable tMIDIPacket as MIDIPacket
   variable tMIDIPacketList as MIDIPacketList
   variable tBufferSize  as Number
   variable tCnt as Number
   variable tMIDIMsgBytesNSDataRef as ObjCId
   variable tMIDIMsgBytesPtr as Pointer
   put the number of bytes in pMIDIMsgData into tCnt
   put 256 into tBufferSize
   put [0,0] into tTimeBaseInfo
   unsafe
      -- put objC_NSMutableDataWithLength(NumberToNSNumber(8)) into tTimeBaseInfoRef
      -- put objC_NSMutableDataBytesPtr(tTimeBaseInfoRef) into tTimeBaseInfoPtr

      put c_mach_absolute_time() into tAbsoluteTime
      c_mach_timebase_info(tTimeBaseInfo) -- into tTimeBaseInfo
      put element 1 of tTimeBaseInfo into tTBnumerator
      put element 2 of tTimeBaseInfo into tTBdenominator
      -- log "tTimeBaseInfo-NUMERATOR:"
      -- log tTBnumerator
      -- log "tTimeBaseInfo-DENOMINATOR:"
      -- log tTBdenominator
      -- log "TIME:"
      -- log tAbsoluteTime
      put tAbsoluteTime * tTBnumerator / tTBdenominator into tTimeStamp
      log tTimeStamp
      put tTimeStamp + (pTimeOffsetMillisecs * 1000000) into tTimeStamp
      put objC_NSMutableDataWithLength(NumberToNSNumber(tBufferSize)) into sMIDIPacketByteBufferNSMutableDataRef
      put objC_NSMutableDataBytesPtr(sMIDIPacketByteBufferNSMutableDataRef) into sMIDIPacketByteBufferPtr
      put c_MIDIPacketListInit(sMIDIPacketByteBufferPtr) into sMIDIPacketPtr
      put objC_NSMutableDataWithLength(NumberToNSNumber(tCnt)) into tMIDIMsgBytesNSDataRef
      objC_NSMutableDataSetData(tMIDIMsgBytesNSDataRef, DataToNSData(pMIDIMsgData))
      put objC_NSMutableDataBytesPtr(tMIDIMsgBytesNSDataRef) into tMIDIMsgBytesPtr
      put c_MIDIPacketListAdd(sMIDIPacketByteBufferPtr,tBufferSize,sMIDIPacketPtr,tTimeStamp,tCnt,tMIDIMsgBytesPtr) into sMIDIPacketPtr
      put c_MIDIReceived(sMIDISourceEndpointRef,sMIDIPacketByteBufferPtr) into tOSStatus
      end unsafe
end handler

public handler CoreMIDIClientCreate(in clientName as String) returns nothing
   variable tClientNameStrRef as ObjcObject
   variable tOSStatus as optional CInt
   variable tMIDINotifyProc as optional any
   variable tNotifyRefCon as optional any
       unsafe
       -- CreateFunctionBlock(CoreMIDIReceiverCallbackProc, tBlockPtr, tBlockDescriptionPointer)
       put StringToNSString(clientName) into tClientNameStrRef
       put c_MIDIClientCreate(tClientNameStrRef,nothing,nothing,sMIDIClientRef) into tOSStatus
       -- log tOSStatus
   end unsafe
end handler

public handler CoreMIDISourceCreate(in sourceName as String) returns nothing
   -- OSStatus MIDISourceCreate(MIDIClientRef client, CFStringRef name, MIDIEndpointRef *outSrc);
   variable tSourceNameStrRef as ObjcObject
   variable tOSStatus as optional CInt
		unsafe
			put StringToNSString(sourceName) into tSourceNameStrRef
         put c_MIDISourceCreate(sMIDIClientRef,tSourceNameStrRef,sMIDISourceEndpointRef) into tOSStatus
   end unsafe
end handler

public handler CoreMIDIMIDIGetNumberOfSources() returns Number
   variable rSourceCnt as Number
	unsafe
			put c_MIDIGetNumberOfSources() into rSourceCnt
   end unsafe
   return rSourceCnt
end handler

end library
